{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst startBtn = document.querySelector('[data-start]');\nconst dateInput = document.getElementById('datetime-picker');\nlet selectedDate = null;\nlet intervalId = null;\n\nstartBtn.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0] <= new Date()) {\n      iziToast.error({\n        title: \"Error\",\n        message: \"Please choose a date in the future\",\n        position: \"topRight\",\n      });\n      startBtn.disabled = true;\n    } else {\n      selectedDate = selectedDates[0];\n      startBtn.disabled = false;\n    }\n  },\n};\n\nflatpickr(dateInput, options);\n\nconst daysSpan = document.querySelector('[data-days]');\nconst hoursSpan = document.querySelector('[data-hours]');\nconst minutesSpan = document.querySelector('[data-minutes]');\nconst secondsSpan = document.querySelector('[data-seconds]');\n\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\n\nfunction updateTimer(ms) {\n  const { days, hours, minutes, seconds } = convertMs(ms);\n\n  daysSpan.textContent = addLeadingZero(days);\n  hoursSpan.textContent = addLeadingZero(hours);\n  minutesSpan.textContent = addLeadingZero(minutes);\n  secondsSpan.textContent = addLeadingZero(seconds);\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\n\nstartBtn.addEventListener('click', () => {\n  startBtn.disabled = true;\n  dateInput.disabled = true;\n\n  intervalId = setInterval(() => {\n    const now = new Date();\n    const diff = selectedDate - now;\n\n    if (diff <= 0) {\n      clearInterval(intervalId);\n      updateTimer(0);\n      dateInput.disabled = false;\n      return;\n    }\n\n    updateTimer(diff);\n  }, 1000);\n});"],"names":["startBtn","dateInput","selectedDate","intervalId","options","selectedDates","iziToast","flatpickr","daysSpan","hoursSpan","minutesSpan","secondsSpan","addLeadingZero","value","updateTimer","ms","days","hours","minutes","seconds","convertMs","diff"],"mappings":"+IAMA,MAAMA,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAY,SAAS,eAAe,iBAAiB,EAC3D,IAAIC,EAAe,KACfC,EAAa,KAEjBH,EAAS,SAAW,GAEpB,MAAMI,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACjBA,EAAc,CAAC,GAAK,IAAI,MAC1BC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,qCACT,SAAU,UAClB,CAAO,EACDN,EAAS,SAAW,KAEpBE,EAAeG,EAAc,CAAC,EAC9BL,EAAS,SAAW,GAEvB,CACH,EAEAO,EAAUN,EAAWG,CAAO,EAE5B,MAAMI,EAAW,SAAS,cAAc,aAAa,EAC/CC,EAAY,SAAS,cAAc,cAAc,EACjDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAc,SAAS,cAAc,gBAAgB,EAG3D,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAGA,SAASC,EAAYC,EAAI,CACvB,KAAM,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAE,EAEtDP,EAAS,YAAcI,EAAeI,CAAI,EAC1CP,EAAU,YAAcG,EAAeK,CAAK,EAC5CP,EAAY,YAAcE,EAAeM,CAAO,EAChDP,EAAY,YAAcC,EAAeO,CAAO,CAClD,CAEA,SAASC,EAAUL,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAGAnB,EAAS,iBAAiB,QAAS,IAAM,CACvCA,EAAS,SAAW,GACpBC,EAAU,SAAW,GAErBE,EAAa,YAAY,IAAM,CAE7B,MAAMkB,EAAOnB,EADD,IAAI,KAGhB,GAAImB,GAAQ,EAAG,CACb,cAAclB,CAAU,EACxBW,EAAY,CAAC,EACbb,EAAU,SAAW,GACrB,MACD,CAEDa,EAAYO,CAAI,CACjB,EAAE,GAAI,CACT,CAAC"}